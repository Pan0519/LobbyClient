using UnityEngine;
using System.IO;
using System.Collections.Generic;
using Lobby.Common;
using Common.Jigsaw;
using UniRx;
using EventActivity;
using System;
using System.Threading.Tasks;
using LobbyLogic.NetWork.ResponseStruct;
using CommonILRuntime.BindingModule;
using CommonPresenter;
using Debug = UnityLogUtility.Debug;

namespace FrenzyJourney
{
    public class FrenzyJourneyData
    {
        static FrenzyJourneyData instance = new FrenzyJourneyData();
        public static FrenzyJourneyData getInstance { get { return instance; } }
        public FrenzySceneType frenzySceneType { get; set; } = FrenzySceneType.Main;
        public const string JourneyPrefabPath = "prefab/activity/frenzy_journey";
        public Subject<long> frenzyDiceCountUpdateSub { get; private set; } = new Subject<long>();
        public Subject<bool> isCheckDiceTypeSub { get; private set; } = new Subject<bool>();
        public Subject<bool> isAutoPlayingSub { get; private set; } = new Subject<bool>();
        public Subject<bool> isShowRunningSub { get; private set; } = new Subject<bool>();
        public Subject<bool> isCoinBoosterSub { get; private set; } = new Subject<bool>();
        //public Subject<bool> isDiceRunningSub { get; private set; } = new Subject<bool>();
        public Subject<JourneyBoosterData> updateBoostDataSub { get; private set; } = new Subject<JourneyBoosterData>();
        public bool isShowRunning { get; private set; }
        public bool isInCoinBooster { get; private set; }

        public string refreshJsonData;

        public int nowRound;

        public long frenzyDiceCount;

        Action activityEndActive;

        bool isAutoPlay;

        bool chessMoving;

        //public int[][] nabobMapInfo = new int[][] {
        //     new int[]{ 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 30101, 0, 0, 0, 0, 1, 0, 0, 3, 4, 0, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 1, 3, 0, 0, 30101, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 30103, 0, 2, 1, 0, 0, 0, 0, 0, 0, 1, 3, 0, 0, 0, 0, 1, 2, 0, 0,30102, 30101, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 1, 0, 5, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0, 0, 0, 4, 0, 1, 0, 0, 3, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 0, 30103, 0, 0, 0, 0, 1, 0, 0, 30101, 0, 0, 0, 3, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 4, 1, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 3, 1, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 30101, 1, 2, 0, 0, 0, 0, 0, 1, 0, 5, 0, 0, 3, 1, 0, 0, 0, 2, 0, 0, 0, 1, 0, 4, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 1, 3, 0, 0, 0, 0, 0, 30103, 1, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0, 30101, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 3, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 5, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 30101, 0, 0, 1, 2, 0, 0, 0, 30102, 1, 30103, 4, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 3, 0, 1, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 30101, 0, 1, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 0, 1, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 1, 0, 30103, 0, 0, 0, 3, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 1, 3, 0, 0, 0, 5, 0, 1, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 3, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 5 },
        //     new int[]{ 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 4, 0, 1, 0, 0, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 30101, 0, 1, 0, 0, 30103, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 1, 0, 0, 4, 0, 0, 0, 1, 0, 0, 3, 2, 0, 1, 0, 0, 0, 30101, 0, 1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 3, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 4, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 30101, 1, 0, 3, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 1, 0, 3, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 3, 0, 0, 2, 0, 1, 0, 0, 0, 30102, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 5, 0, 30103, 3, 30101, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 3, 0, 1, 2, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 30103, 30101, 1, 0, 0, 0, 0, 0, 5, 0, 1, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 3, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 0, 4, 30101, 0, 0, 0, 0, 1, 0, 0, 2, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 3, 5, 1, 0, 30101, 2, 0, 0, 1, 0, 0, 0, 0, 0, 4, 0, 1, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0, 30101, 0, 0, 1, 30102, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 2, 3, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 30103, 2, 0, 0, 0, 0, 0, 1, 0, 0, 3, 0, 0, 1, 5},
        //     new int[]{ 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 3, 0, 1, 2, 0, 0, 0, 0, 0, 1, 0, 30101, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 4, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 30101, 0, 0, 1, 0, 0, 0, 0, 3, 0, 1, 0, 30103, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 5, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 30101, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 30103, 0, 1, 0, 0, 4, 0, 0, 3, 1, 2, 0, 0, 0, 0, 0, 1, 0, 30101, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 3, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 3, 1, 0, 30102, 4, 0, 2, 0, 5, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 3, 1, 0, 0, 0, 30103, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 0, 30101, 0, 0, 0, 0, 1, 0, 0, 3, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 1, 0, 0, 3, 0, 0, 30101, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 1, 4, 5, 0, 0, 0, 0, 1, 0, 30102, 30103, 0, 2, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 3, 0, 1, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 2, 0, 3, 0, 0, 0, 1, 4, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 2, 1, 0, 30103, 0, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 30101, 0, 1, 0, 0, 0, 0, 4, 3, 1, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 5, 0, 1, 0, 0, 0, 0, 30102, 1, 0, 0, 0, 3, 0, 1, 0, 30101, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 5 },
        //     new int[]{ 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 2, 0, 4, 0, 0, 1, 0, 0, 0, 3, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 1, 0, 0, 3, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 30101, 1, 0, 0, 0, 0, 0, 2, 1, 0, 0, 30102, 0, 0, 5, 0, 0, 0, 0, 2, 1, 3, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 30103, 1, 2, 0, 30101, 4, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 2, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 0, 2, 0, 0, 1, 0, 30101, 0, 0, 0, 1, 0, 0, 4, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 30103, 1, 0, 0, 30101, 0, 5, 1, 0, 0, 2, 0, 0, 0, 1, 0, 3, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 30101, 0, 1, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 30103, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 30101, 0, 1, 0, 2, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 3, 0, 1, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 1, 4, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 3, 1, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 30101, 1, 0, 0, 0, 3, 5, 1, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 4, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 30101, 2, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 2, 0, 0, 5, 0, 0, 0, 1, 0, 3, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 1, 0, 30101, 0, 0, 0, 1, 2, 5 },
        //     new int[]{ 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 3, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 30101, 2, 0, 1, 0, 0, 4, 0, 0, 3, 0, 1, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 1, 0, 30103, 0, 0, 0, 3, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 0, 1, 4, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 1, 0, 30101, 0, 0, 0, 30102, 0, 1, 0, 0, 0, 0, 0, 1, 0, 5, 0, 0, 0, 0, 0, 1, 0, 2, 3, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 30103, 3, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 1, 0, 3, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 30101, 1, 0, 0, 0, 0, 0, 0, 1, 4, 0, 0, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 5, 30101, 0, 1, 30103, 0, 0, 3, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 4, 0, 1, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 1, 0, 0, 0, 0, 0, 30101, 0, 1, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 3, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 1, 0, 4, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 30101, 0, 0, 0, 1, 0, 0, 0, 5, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 3, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 4, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 30101, 0, 0, 0, 0, 1, 30103, 0, 0, 5, 0, 0, 2, 1, 0, 0, 0, 3, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 4, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 30101, 1, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 3, 2, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 30103, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 5 },
        //     new int[]{ 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 3, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 1, 0, 30101, 0, 0, 3, 0, 0, 1, 4, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 1, 3, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 30101, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 3, 0, 0, 0, 0, 1, 0, 4, 2, 0, 0, 1, 0, 0, 0, 30101, 0, 0, 1, 0, 0, 0, 0, 0, 2, 0, 1, 30102, 5, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 3, 0, 1, 30101, 0, 4, 0, 0, 0, 0, 1, 2, 0, 0, 30103, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 30101, 0, 0, 0, 1, 2, 3, 0, 0, 4, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 3, 0, 0, 2, 0, 1, 0, 5, 30103, 0, 0, 1, 0, 0, 30101, 0, 0, 2, 0, 1, 0, 0, 0, 0, 30102, 0, 1, 3, 0, 2, 0, 0, 1, 0, 0, 0, 4, 0, 1, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 3, 1, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 1, 30103, 0, 0, 0, 4, 0, 0, 1, 0, 0, 0, 0, 5, 0, 0, 1, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 0, 3, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 30102, 0, 1, 4, 0, 0, 0, 0, 1, 3, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 30103, 0, 1, 0, 5, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 3, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 30101, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 5, 1, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 30103, 0, 30101, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 5 },
        //     new int[]{ 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 3, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 30101, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 4, 1, 3, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 30103, 1, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 1, 30101, 0, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 4, 3, 0, 1, 0, 0, 0, 0, 0, 1, 0, 30102, 30101, 0, 0, 0, 5, 1, 0, 0, 0, 0, 0, 1, 0, 0, 3, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 1, 0, 30101, 0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 4, 1, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 3, 0, 0, 0, 0, 30101, 1, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 1, 3, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 2, 30102, 0, 1, 0, 0, 0, 30103, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 2, 0, 0, 30101, 4, 0, 1, 0, 0, 0, 0, 0, 1, 2, 0, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 3, 0, 2, 1, 0, 0, 0, 0, 0, 5, 1, 4, 0, 30103, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 2, 0, 0, 30101, 0, 1, 0, 0, 0, 0, 0, 1, 2, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0, 1, 4, 2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 0, 5, 0, 0, 0, 30101, 3, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 1, 0, 2, 0, 4, 0, 1, 0, 0, 0, 30101, 0, 0, 0, 5, 0, 2, 0, 0, 0, 0, 1, 0, 0, 0, 3, 0, 1, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 1, 0, 5 },
        //     new int[]{ 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 1, 3, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 1, 0, 0, 0, 30101, 0, 1, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 0, 1, 3, 0, 0, 0, 0, 0, 1, 0, 30101, 0, 0, 0, 1, 2, 0, 4, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 30102, 1, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 5, 0, 0, 1, 0, 0, 0, 2, 0, 0, 3, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 4, 2, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 3, 1, 0, 2, 0, 0, 30103, 1, 0, 0, 0, 0, 30101, 0, 1, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 1, 4, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 1, 0, 0, 3, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 30102, 0, 0, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 0, 2, 0, 1, 30103, 0, 0, 0, 0, 0, 1, 0, 0, 30101, 2, 0, 0, 1, 0, 0, 0, 0, 0, 1, 3, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 3, 1, 0, 2, 0, 0, 30101, 0, 0, 1, 0, 4, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 30101, 0, 0, 0, 1, 3, 0, 0, 0, 0, 4, 1, 0, 0, 30102, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 3, 1, 0, 30101, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 0, 4, 0, 5, 0, 0, 1, 3, 0, 2, 0, 0, 30103, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 5, 0, 0, 0, 1, 0, 0, 30101, 3, 0, 1, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 30103, 0, 0, 2, 1, 0, 0, 0, 3, 5 },
        //     new int[]{ 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 30101, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 4, 0, 1, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 1, 0, 3, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 30101, 1, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 30102, 0, 0, 0, 0, 1, 30101, 0, 2, 0, 0, 0, 0, 1, 3, 5, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 30103, 0, 0, 0, 0, 1, 3, 0, 4, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 30101, 1, 0, 0, 0, 0, 0, 1, 0, 0, 4, 3, 0, 1, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 30103, 0, 1, 5, 3, 0, 30101, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 30102, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 1, 30101, 0, 0, 2, 0, 0, 1, 3, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 4, 1, 0, 0, 0, 0, 0, 0, 1, 3, 0, 30101, 0, 0, 30103, 1, 0, 0, 0, 0, 0, 5, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 30101, 0, 4, 1, 0, 0, 0, 2, 0, 1, 0, 0, 0, 3, 0, 1, 0, 0, 0, 0, 2, 30102, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 5, 0, 0, 1, 30101, 2, 0, 0, 0, 30103, 1, 4, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 2, 0, 3, 0, 0, 0, 0, 1, 0, 0, 30101, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 5, 0, 0, 0, 2, 1, 0, 0, 0, 3, 0, 1, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 30101, 0, 1, 2, 0, 0, 0, 5 },
        //     new int[]{ 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 0, 0, 30101, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 1, 0, 3, 0, 4, 0, 0, 1, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 30101, 0, 0, 2, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 4, 0, 3, 0, 1, 0, 0, 0, 30101, 0, 1, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 2, 5, 0, 30102, 0, 1, 3, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 1, 30101, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 30103, 3, 0, 1, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 1, 0, 3, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 3, 0, 0, 4, 1, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 5, 30102, 0, 0, 0, 0, 1, 3, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 3, 0, 4, 1, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 30101, 0, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 5, 3, 0, 0, 0, 2, 0, 4, 1, 30101, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 3, 0, 0, 1, 2, 0, 0, 0, 0, 1, 0, 30102, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 30101, 0, 1, 3, 0, 0, 0, 0, 0, 1, 0, 0, 0, 4, 0, 2, 1, 0, 0, 5, 0, 0, 0, 1, 0, 0, 0, 2, 3, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 30101, 0, 2, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 1, 3, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 5, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 30101, 2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 30103, 0, 0, 0, 1, 0, 5 }
        //};

        public int[][] nabobMapInfo = new int[][] {
             new int[]{0,0,0,2,0,0,0,1,0,0,30103,0,0,1,0,0,0,2,0,0,0,0,1,0,0,3,0,0,1,0,0,2,0,0,1,0,0,0,30101,0,0,0,1,0,0,2,0,0,1,0,0,0,4,0,0,1,0,0,2,0,0,1,0,0,30101,0,0,0,1,0,0,0,2,0,0,1,0,0,0,4,0,0,0,1,0,0,2,0,0,0,1,0,0,0,3,0,0,0,1,0,0,2,0,0,1,0,0,30102,0,5,0,1,0,0,0,2,0,0,1,0,0,3,0,0,0,1,0,0,30101,0,0,1,0,0,0,2,0,0,1,0,0,0,3,0,0,1,0,0,0,2,0,0,0,1,0,0,4,0,0,0,1,0,0,0,2,0,0,1,0,0,30102,0,0,0,1,0,0,0,2,0,0,0,1,0,0,3,0,0,0,1,0,0,0,2,0,0,0,1,0,0,0,30101,0,0,1,0,0,2,0,5,0,1,0,0,4,0,0,1,0,0,0,2,0,0,1,0,0,0,30102,0,0,1,0,0,0,2,0,0,1,0,0,4,0,0,1,0,0,2,0,0,0,1,0,0,30101,0,0,0,1,0,0,0,2,0,0,1,0,0,3,0,0,0,1,0,0,0,2,0,0,1,0,0,30103,0,0,1,0,0,0,2,0,0,0,1,0,0,0,3,0,5,0,1,0,0,30103,0,0,1,0,0,0,3,0,0,1,0,0,0,2,0,0,0,1,0,0,0,3,0,0,1,0,0,2,0,0,1,0,0,30102,0,0,1,0,0,0,2,0,0,1,0,0,3,0,0,1,0,0,0,2,0,0,0,1,0,0,0,4,0,0,0,1,0,0,0,2,0,0,1,0,5,0,30101,0,0,0,1,0,0,0,3,0,0,1,0,0,2,0,0,0,1,0,0,30101,0,0,1,0,0,0,2,0,0,1,0,0,30101,0,0,0,1,0,0,0,3,0,0,1,0,0,0,2,0,0,0,1,0,0,3,0,0,0,1,0,0,30101,0,0,1,0,5,0,0,3,0,0,0,1,0,0,0,2,0,0,1,0,0,0,4,0,0,1,0,0,30101,0,0,1,0,0,3,0,0,1,0,0,0,2,0,0,1,0,0,30101,0,0,0,1,0,0,3,0,0,0,1,0,0,0,2,0,5},
             new int[]{0,0,1,0,0,4,0,0,1,0,0,2,0,0,1,0,0,0,30101,0,0,1,0,0,2,0,0,1,0,0,4,0,0,0,0,1,0,0,0,2,0,0,1,0,0,0,3,0,0,1,0,0,0,2,0,0,1,0,0,30102,0,0,1,0,0,2,0,0,0,1,0,0,3,0,0,0,1,0,0,0,30101,0,0,1,0,0,2,0,0,1,0,0,3,0,0,1,0,0,0,2,0,0,1,0,0,4,0,1,0,5,0,2,0,0,1,0,0,30102,0,0,1,0,0,0,2,0,0,1,0,0,0,3,0,0,1,0,0,2,0,0,0,1,0,0,0,30101,0,0,1,0,0,2,0,0,0,1,0,0,4,0,0,0,1,0,0,0,2,0,0,0,1,0,0,0,30102,0,0,0,1,0,0,2,0,0,1,0,0,4,0,0,0,1,0,0,0,2,0,0,1,0,0,30101,0,0,1,0,0,2,0,5,0,1,0,3,0,0,1,0,0,0,2,0,0,0,1,0,0,0,30103,0,0,1,0,0,2,0,0,1,0,0,0,3,0,0,0,1,0,0,30103,0,0,0,1,0,0,3,0,0,0,1,0,0,0,2,0,0,1,0,0,3,0,0,0,1,0,0,2,0,0,1,0,0,0,30102,0,0,1,0,0,0,2,0,0,1,0,0,0,3,0,5,0,1,0,2,0,0,0,1,0,0,4,0,0,1,0,0,0,2,0,0,0,1,0,0,30101,0,0,0,1,0,0,3,0,0,1,0,0,0,2,0,0,1,0,0,0,30101,0,0,0,1,0,0,2,0,0,0,1,0,0,0,30101,0,0,0,1,0,0,3,0,0,1,0,0,2,0,0,0,1,0,5,0,3,0,0,0,1,0,0,0,30101,0,0,1,0,0,3,0,0,1,0,0,0,2,0,0,0,1,0,0,4,0,0,1,0,0,0,30101,0,0,0,1,0,0,0,3,0,0,1,0,0,2,0,0,1,0,0,0,30101,0,0,0,1,0,0,0,3,0,1,0,5,0,2,0,0,0,1,0,0,0,3,0,0,1,0,0,4,0,0,1,0,0,30102,0,0,0,1,0,0,0,2,0,0,0,1,0,0,0,2,0,0,1,0,0,0,30103,0,0,0,1,0,0,2,0,0,0,1,0,3,0,5},
             new int[]{0,0,30101,0,0,0,1,0,0,0,2,0,0,0,0,1,0,0,3,0,0,1,0,0,2,0,0,1,0,0,0,4,0,0,0,1,0,0,0,2,0,0,1,0,0,30102,0,0,1,0,0,2,0,0,1,0,0,3,0,0,1,0,0,2,0,0,0,1,0,0,0,30101,0,0,0,1,0,0,2,0,0,1,0,0,4,0,0,0,1,0,0,0,2,0,0,1,0,0,30102,0,0,0,1,0,0,0,4,0,0,5,0,1,0,2,0,0,1,0,0,30101,0,0,0,1,0,0,2,0,0,1,0,0,4,0,0,1,0,0,0,2,0,0,0,1,0,0,3,0,0,1,0,0,2,0,0,1,0,0,30102,0,0,0,1,0,0,0,2,0,0,0,1,0,0,3,0,0,1,0,0,30102,0,0,1,0,0,2,0,0,0,1,0,0,3,0,0,0,1,0,0,2,0,0,0,1,0,0,0,4,0,5,0,1,0,2,0,0,1,0,0,30101,0,0,0,1,0,0,3,0,0,1,0,0,2,0,0,1,0,0,0,30101,0,0,1,0,0,2,0,0,1,0,0,30101,0,0,0,1,0,0,0,2,0,0,1,0,0,0,4,0,0,1,0,0,2,0,0,1,0,0,30101,0,0,1,0,0,2,0,0,0,1,0,0,0,3,0,0,0,1,0,0,5,0,2,0,1,0,0,0,4,0,0,1,0,0,0,30101,0,0,1,0,0,3,0,0,1,0,0,0,2,0,0,1,0,0,0,30101,0,0,1,0,0,0,3,0,0,1,0,0,2,0,0,0,1,0,0,3,0,0,1,0,0,0,4,0,0,1,0,0,0,30102,0,0,0,1,0,0,0,2,0,0,5,0,1,0,2,0,0,1,0,0,0,30103,0,0,0,1,0,0,2,0,0,0,1,0,0,0,30103,0,0,0,1,0,0,2,0,0,0,1,0,0,0,3,0,0,0,1,0,0,0,30103,0,0,0,1,0,0,3,0,0,0,1,0,0,0,2,0,0,1,0,0,5,0,3,0,0,1,0,2,0,0,1,0,0,0,30101,0,0,0,1,0,0,3,0,0,0,1,0,0,2,0,0,0,1,0,0,3,0,0,1,0,0,2,0,0,0,1,0,0,0,30101,0,0,1,0,0,2,0,0,1,0,5}
        };

        public List<int> diceNums = new List<int>() { 1, 2, 3, 4, 5, 6, 12, 18 };

        Dictionary<int, ChangeDirectionType> changeDireGroundDict = new Dictionary<int, ChangeDirectionType>()
        {
            { 3,ChangeDirectionType.Up},
            { 8,ChangeDirectionType.Forward},
            { 11,ChangeDirectionType.Down},
            { 16,ChangeDirectionType.Forward},
            { 19,ChangeDirectionType.Up},
            { 24,ChangeDirectionType.Forward},
            { 27,ChangeDirectionType.Down},
            { 32,ChangeDirectionType.Forward},
        };

        public ChangeDirectionType getChangeDirectionType(int groundID, ChangeDirectionType nowDirectionType = ChangeDirectionType.None)
        {
            ChangeDirectionType directionType = nowDirectionType;

            if (changeDireGroundDict.TryGetValue(groundID, out directionType))
            {
                return directionType;
            }

            return nowDirectionType;
        }

        public ChangeDirectionType getRangeDireType(int groundID)
        {
            ChangeDirectionType directionType = ChangeDirectionType.None;

            if (changeDireGroundDict.TryGetValue(groundID, out directionType))
            {
                return directionType;
            }

            var keys = changeDireGroundDict.Keys;
            int[] direKeys = new int[keys.Count];
            keys.CopyTo(direKeys, 0);

            if (groundID < direKeys[0] || groundID > direKeys[direKeys.Length - 1])
            {
                return ChangeDirectionType.Forward;
            }

            for (int i = 0; i < direKeys.Length; ++i)
            {
                int firstKey = direKeys[i];
                int lastKey = direKeys[i + 1];
                if (groundID > firstKey && groundID < lastKey)
                {
                    directionType = getChangeDirectionType(firstKey);
                    break;
                }
            }

            return directionType;
        }

        public Sprite getIconSprite(string spriteName)
        {
            return LobbySpriteProvider.instance.getSprite<FrenzyJourneySpriteProvider>(LobbySpriteType.FrenzyJourney, spriteName);
        }

        public string getPrefabFullPath(string prefabName)
        {
            return Path.Combine(JourneyPrefabPath, prefabName);
        }

        public void updateFrenzyDiceCount(long count, bool isCheckDiceType = false)
        {
            frenzyDiceCount = count;
            frenzyDiceCountUpdateSub.OnNext(frenzyDiceCount);
            isCheckDiceTypeSub.OnNext(isCheckDiceType);
        }

        public void startAutoPlay()
        {
            isAutoPlay = true;
            isAutoPlayingSub.OnNext(isAutoPlay);
        }

        public void stopAutoPlay()
        {
            isAutoPlay = false;
            isAutoPlayingSub.OnNext(isAutoPlay);
        }
        public bool isAutoPlaying { get { return isAutoPlay; } }

        public void chessStartMoving()
        {
            chessMoving = true;
        }

        public void chessStopMove()
        {
            chessMoving = false;
        }
        public bool isChessMoving { get { return chessMoving; } }

        public bool isGameEnd { get; private set; }
        public void gameEndSub(bool isEnd)
        {
            isGameEnd = isEnd;
            if (isEnd && !isShowRunning)
            {
                showGameEndMsg();
            }
        }
        public void showGameEndMsg()
        {
            isGameEnd = false;
            UiManager.getPresenter<MsgBoxPresenter>().openActivityEndNode(activityEndActive);
        }

        public void setActivityEndEvent(Action endEvent)
        {
            activityEndActive = endEvent;
        }

        public async void showRunning(bool isRunning, string targetName = "")
        {
            Debug.Log($"{targetName} showRunning isRunning?{isRunning} , isGameEnd?{isGameEnd}");
            if (false == isShowRunning && isGameEnd)
            {
                showGameEndMsg();
                return;
            }
            Debug.Log($"showRunning isRunning = false && wait");
            if (!isRunning)
            {
                await Task.Delay(TimeSpan.FromSeconds(0.3f));
            }
            isShowRunning = isRunning;
            isShowRunningSub.OnNext(isRunning);
            Debug.Log($"showRunning isShowRunning? {isShowRunning}");
        }

        public void coinBooster(bool isInCoinBooster)
        {
            this.isInCoinBooster = isInCoinBooster;
            isCoinBoosterSub.OnNext(isInCoinBooster);
        }

        public void updateBoostData(JourneyBoosterData data)
        {
            updateBoostDataSub.OnNext(data);
        }
    }

    public class FrenzyJourneyBoxData
    {
        public ActivityAwardData awardData;
        public string rewardPackID;
    }

    public enum MapItemType
    {
        None = 0,
        Coin,
        Wood,
        Silver,
        Gold,
        Boss,
        GreenPack = PuzzlePackID.Green,
        BluePack,
        GoldPack,
    }

    public enum BoxRewardType
    {
        None = 0,
        Coin,
        Dice,
        Card,
    }

    public enum FrenzySceneType
    {
        Main,
        Boss,
    }

    public enum ChangeDirectionType
    {
        None,
        Forward,
        Up,
        Down,
    }
}
